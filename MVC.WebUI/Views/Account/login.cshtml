@model MVC.WebUI.Models.Account.LoginViewModel
@using MVC.WebUI.Helpers
@using MVC.Core.Configuration

@{
    ViewBag.Title = "Log In";
}

<section>
    <h1>@Resources.FormLabels.LogIn</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <section class="alert success">
            <p>@TempData["SuccessMessage"]</p>
        </section>
    }

    @*http://stackoverflow.com/questions/12107263/why-is-validationsummarytrue-displaying-an-empty-summary-for-property-errors*@
    @if (ViewContext.ViewData.ModelState.Where(x => x.Key == string.Empty).Any())
    {
        Html.ValidationSummary(false, "You cannot sign in because:");
    }

    @Html.CustomValidationSummary(false)

    @using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
    {
        @Html.AntiForgeryToken()
        <ol>
            <li>
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName, new { autofocus = "autofocus", maxlength = "30", required = "required" })
                @Html.ValidationMessageFor(m => m.UserName)
            </li>
            <li>
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { autocomplete = "off", minlength = "8", pattern = RegularExpressions.PasswordWeak, required = "required", title = Resources.ValidationErrors.Password })
                @Html.ValidationMessageFor(m => m.Password)
            </li>
            <li>
                @Html.CheckBoxFor(m => m.Persist)
                @Html.LabelFor(m => m.Persist, Resources.FormLabels.LoginPersist)
            </li>
        </ol>
        @Html.ActionLink(Resources.FormLabels.ForgottenPassword, "request-password")
        <button>@Resources.FormLabels.LogIn</button>
    }
</section>
